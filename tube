<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>to Do VUE</title>
    <link rel="stylesheet" href="style.css">
    <script src="https://unpkg.com/vue@2.4.4/dist/vue.js"></script>
</head>
<body>
<div class="wrapper">
	<div id="app">
	    <input class="mainInput" v-on:keyup.13="addTask" type="text" v-model="innerText" placeholder="Хотите добавить новое задание?">
	    
	    <ul class="withoutMarker">
	        <li v-for="(task, index) in tasks"  v-bind:class="{'strike': task.checked}" v-show="task.activeFlag">
	            <input type="checkbox" v-model="task.checked">
	            <span v-show="task.visible" v-on:click="task.visible=!task.visible">{{ task.text }}</span>
	            <input type="text"  v-show="!task.visible" v-model="task.text" v-on:keyup.13="task.visible=!task.visible">
	            <div class="imageBtn">
	                <img src="pencil.png" v-on:click="task.visible=!task.visible" >
	                    <img src="delete.png" v-on:click="removeCurrentTask(index)">
	            </div>
	        </li>
	    </ul>
        <input class="counter" v-bind:value="counter">Незаконченных задач
	   
	   <br>
	    <br>
	    <div class="btnWrapper">
	        <button v-on:click="allTasksCounter">Все</button>
	        <button v-on:click="activeCounter">Активные</button>
	        <button v-on:click="doneCounter" >Законченные</button>
	        <button v-on:click="removeAllTasks" >Удалить все</button>
	    </div>
	</div>
</div>
</body>
<script>
    var vm = new Vue({
        el:'#app',
        data: {
            innerText:'',
            tasks:[],
            visible:true 
        },
        methods:{
            addTask: function(){
                this.tasks.push({'text':this.innerText, 'checked':false, 'visible': true, 'activeFlag':true});
                this.innerText = '';
            },
           removeCurrentTask : function(index){
                !this.tasks[index].checked,
                this.tasks.splice(index,1);
            },
            removeAllTasks: function(){
                this.tasks.splice(this.task);
            },
            activeCounter: function(){
                this.tasks.forEach(el => el.activeFlag = !el.checked);
            },
            allTasksCounter: function(){
                this.tasks.forEach(el => el.activeFlag = true); 
            },
            doneCounter: function(){
                this.tasks.forEach(el=> el.activeFlag = el.checked);
            }
        },
        computed: {
            counter: function() {
                var filteredTask = this.tasks.filter(task => !task.checked);
                return(filteredTask.length);
                         
        }
    }
})
</script>
</html>


body{
            display: flex;
            background: #f5f5f5;
            font-family: 'Exo 2', sans-serif;
        }
        .wrapper{
            margin:auto;
            /*border:solid 1px grey;*/
            width:700px;
            height: 400px;
            margin-top: 150px;
            padding: 15px;
            overflow-y: auto;
            box-shadow: 0 1px 1px rgba(0, 0, 0, 0.2), 0 8px 0 -3px #f6f6f6, 0 9px 1px -3px rgba(0, 0, 0, 0.2), 0 16px 0 -6px #f6f6f6, 0 17px 2px -6px rgba(0, 0, 0, 0.2);
            border-top: 1px solid #e6e6e6;
            background: rgba(0, 0, 0, 0.05);
        }
        .withoutMarker li {
            display: flex;
            position: relative;
            height: 20px;
            font-size: 25px;
            padding-bottom: 5px;
            margin-bottom: 5px;
        }
        input::-webkit-input-placeholder {
            color:#e30613;

        }
        .imageBtn{
            position: absolute;
            right: 0px;
            width: 15%;
        }
        .imageBtn img{
            width:20%;
            padding-left:5px;
        }
        .strike{
            text-decoration: line-through;
            color:grey;
        }
        .withoutMarker{
            list-style-type: none;
        }
        input[type="checkbox"] {
            vertical-align: bottom;
            width: 17px;
            height: 17px;
            margin: 0 3px 0 0;
        }
        .btnWrapper{
            display: flex;
            flex-direction: row;
            justify-content: space-between;
        }
        .btnWrapper button {
            text-decoration: none;
            outline: none;
            color: whitesmoke;
            margin: 10px 20px;
            letter-spacing: 2px;
            background: rgba(179, 107, 120, 0.67);
            background-size: 200% auto;
            box-shadow: 0 0 20px rgba(0,0,0,.1);
            }
        .mainInput{
        	width: 96%; 
        	height:30px; 
        	font-size:25px; 
        	border: 1px solid #e6e6e6; 
        	padding:10px;
        }
        .counter{
        	width: 12px; 
        	margin:5px; 
        	padding-left:5px; 
        	padding-right:5px; 
        	border: solid 1px grey;
        }
